var Timer tOfficeLights = null



rule "Office Lights - Scene Control"
    when
        Item vOfficeLights_Scene received update
    then
    logInfo("-15-Office.R3", "### Office Lights - Scene Control ###")
    {
		switch(vOfficeLights_Scene.state) {
			/*ON*/
			case 1.0 : {							/* Single Tap ON */
				logInfo("-15-Office.R3", "Single Press ON")
				//When Daylight use 100% brightness
				//Check if its Michael's bedtime which is between 7PM and 7AM, use 5% brightness
				//Else use medium brightness for evening time
					if(NightState.state == OFF) {
						vOfficeLights.sendCommand(100)
					} else {
						if(now.getHourOfDay > 19 || now.getHourOfDay < 7 ) {	//Michael is sleeping 7:00PM - 7:00AM
							vOfficeLights.sendCommand(2)
						} else {
							vOfficeLights.sendCommand(50)
						}
					}

			    }
			case 1.3 : {							/* Double Tap ON */
			    logInfo("-15-Office.R3", "Double Press ON")
				vOfficeLights.sendCommand(100)
				
			}
			case 1.4 : { 							/* Tripple Tap ON */
			   	logInfo("-15-Office.R3", "Tripple Press ON")

			}
			/*OFF*/
			case 2.0 : {							/* Single Tap OFF */
				logInfo("-15-Office.R3", "Single Press OFF")
			    }
			case 2.3 : {							/* Double Tap OFF */
			    logInfo("-15-Office.R3", "Double Press OFF")
				sendCommand(vOfficeLights, 0)
			}
			case 2.4 : { 							/* Tripple Tap OFF */
			   logInfo("-15-Office.R3", "Tripple Press OFF")

			}
		}
    }
    end

//***********************************************************************************************************************************************
// 															OFFICE DOOR LIGHTING															*
//***********************************************************************************************************************************************
rule "Office Door Opens"
when
	Item vOfficeDoor changed from CLOSED to OPEN
then
	logInfo("-15-Office.R1", "### Office Door Opens ###")
{	
    if(vOfficeDoor.state == OPEN) {
        if(NightState.state == OFF) {
            if ( vOfficeLights.state == 0) {
                sendCommand(vOfficeLights, 100)
            }
		}
	}	
}
end	


rule "vOfficeLights Off Timer"
when
    Item vOfficeLights changed
then
logInfo("-15-Office.R2", "### vOfficeLights Off Timer ###")
{ 
	//Stair Lights are not OFF. Dimmer is >1% -- ELSE -- Check if lights were turned off and timer !null. then cancel timer
	//Timer isn't active -- ELSE -- Reschedule Timer
	//Create OFF timer
	//When timer runs out, check PIR to make sure it's off before turning lits OFF. -- ELSE -- Reschedule timer
	if(vOfficeLights.state > 0) {
		if(tOfficeLights === null) { 
			logInfo("-15-Office.R2", "--> Office Lights turned ON. Creating OFF timer tOfficeLights")
			tOfficeLights = createTimer(now.plusMinutes(120)) [|
				//if(gEntrancePIR.state == 0) { 
					sendCommand(vOfficeLights, 0)
					tOfficeLights = null
					logInfo("-15-Office.R2", "--> Timer Expired. Turning Lights off")
				//} else {
				//	tOfficeLights.reschedule(now.plusSeconds(60))
				//	logInfo("-07-Office.R2", "--> Timer Expired but EntranceStair PIR Detected Motion. Rescheduling Stair Lights.")
				//}
			]
		} else {
			tOfficeLights.reschedule(now.plusMinutes(60))
			logInfo("-15-Office.R2", "--> Timer Active. Rescheduling tOfficeLights")
		}	
	} else if(vOfficeLights.state == 0){
        logInfo("-15-Office.R2", "--> Office Lights == OFF")
		if(tOfficeLights !== null) {
            logInfo("-15-Office.R2", "--> Canceling Active Timer: tOfficeLights")
			tOfficeLights.cancel()
			tOfficeLights = null
		}
		//gEntrancePIR.sendCommand(0)
		//logInfo("-07-PIR_Sensors.R2", "--> Lights Turned OFF. Canceling tEntranceStairLights")
	}
}
end